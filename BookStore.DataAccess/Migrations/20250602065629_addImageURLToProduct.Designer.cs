// <auto-generated />
using System;
using BookStore.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStore.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250602065629_addImageURLToProduct")]
    partial class addImageURLToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "History"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 5,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 6,
                            Name = "Detective"
                        });
                });

            modelBuilder.Entity("BookStore.Models.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Andy Weir",
                            CategoryId = 2,
                            Description = "A lone astronaut must save Earth from disaster in this gripping sci-fi thriller.",
                            ISBN = "9780593135204",
                            ImageURL = "",
                            Price = 15.99,
                            PublicationDate = new DateTime(2025, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Project Hail Mary"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Frank Herbert",
                            CategoryId = 2,
                            Description = "A desert planet. A prophecy. A revolution. Classic space opera.",
                            ISBN = "9780441013593",
                            ImageURL = "",
                            Price = 13.49,
                            PublicationDate = new DateTime(1965, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Dune"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Samantha Shannon",
                            CategoryId = 4,
                            Description = "An epic feminist fantasy novel with dragons, politics, and magic.",
                            ISBN = "9781635570298",
                            ImageURL = "",
                            Price = 17.989999999999998,
                            PublicationDate = new DateTime(2025, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Priory of the Orange Tree"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Brandon Sanderson",
                            CategoryId = 4,
                            Description = "Book 4 of the epic fantasy series by Brandon Sanderson.",
                            ISBN = "9780765326386",
                            ImageURL = "",
                            Price = 24.989999999999998,
                            PublicationDate = new DateTime(2020, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Stormlight Archive: Rhythm of War"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Jack Carr",
                            CategoryId = 1,
                            Description = "A Navy SEAL seeks vengeance after his team is ambushed.",
                            ISBN = "9781501180811",
                            ImageURL = "",
                            Price = 10.99,
                            PublicationDate = new DateTime(2018, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Terminal List"
                        },
                        new
                        {
                            Id = 6,
                            Author = "John Grisham",
                            CategoryId = 1,
                            Description = "A riveting legal thriller packed with action and suspense.",
                            ISBN = "9780385544153",
                            ImageURL = "",
                            Price = 11.99,
                            PublicationDate = new DateTime(2018, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Reckoning"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Erik Larson",
                            CategoryId = 3,
                            Description = "A portrait of Winston Churchill during the Blitz.",
                            ISBN = "9780385348713",
                            ImageURL = "",
                            Price = 18.0,
                            PublicationDate = new DateTime(2020, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Splendid and the Vile"
                        },
                        new
                        {
                            Id = 8,
                            Author = "David Grann",
                            CategoryId = 3,
                            Description = "True story of murder and the birth of the FBI.",
                            ISBN = "9780307742483",
                            ImageURL = "",
                            Price = 14.99,
                            PublicationDate = new DateTime(2017, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Killers of the Flower Moon"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Stephen Graham Jones",
                            CategoryId = 5,
                            Description = "A disturbing horror novel blending Native American identity and supernatural revenge.",
                            ISBN = "9781982136451",
                            ImageURL = "",
                            Price = 12.99,
                            PublicationDate = new DateTime(2020, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Only Good Indians"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Krystal Sutherland",
                            CategoryId = 5,
                            Description = "A dark, twisted fairy tale with horror elements.",
                            ISBN = "9780593110348",
                            ImageURL = "",
                            Price = 11.99,
                            PublicationDate = new DateTime(2025, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The House of Hollow"
                        },
                        new
                        {
                            Id = 11,
                            Author = "Richard Osman",
                            CategoryId = 6,
                            Description = "Four elderly friends meet weekly to solve murders—until one happens close to home.",
                            ISBN = "9781984880963",
                            ImageURL = "",
                            Price = 13.99,
                            PublicationDate = new DateTime(2020, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Thursday Murder Club"
                        },
                        new
                        {
                            Id = 12,
                            Author = "Holly Jackson",
                            CategoryId = 6,
                            Description = "A high school student reopens a closed murder case for a school project.",
                            ISBN = "9781984896360",
                            ImageURL = "",
                            Price = 10.99,
                            PublicationDate = new DateTime(2025, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "A Good Girl's Guide to Murder"
                        });
                });

            modelBuilder.Entity("BookStore.Models.Models.Product", b =>
                {
                    b.HasOne("BookStore.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
